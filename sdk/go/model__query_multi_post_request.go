/*
BV-BRC API

API documentation for BV-BRC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QueryMultiPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMultiPostRequest{}

// QueryMultiPostRequest struct for QueryMultiPostRequest
type QueryMultiPostRequest struct {
	Queries []QueryMultiPostRequestQueriesInner `json:"queries,omitempty"`
}

// NewQueryMultiPostRequest instantiates a new QueryMultiPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMultiPostRequest() *QueryMultiPostRequest {
	this := QueryMultiPostRequest{}
	return &this
}

// NewQueryMultiPostRequestWithDefaults instantiates a new QueryMultiPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMultiPostRequestWithDefaults() *QueryMultiPostRequest {
	this := QueryMultiPostRequest{}
	return &this
}

// GetQueries returns the Queries field value if set, zero value otherwise.
func (o *QueryMultiPostRequest) GetQueries() []QueryMultiPostRequestQueriesInner {
	if o == nil || IsNil(o.Queries) {
		var ret []QueryMultiPostRequestQueriesInner
		return ret
	}
	return o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMultiPostRequest) GetQueriesOk() ([]QueryMultiPostRequestQueriesInner, bool) {
	if o == nil || IsNil(o.Queries) {
		return nil, false
	}
	return o.Queries, true
}

// HasQueries returns a boolean if a field has been set.
func (o *QueryMultiPostRequest) HasQueries() bool {
	if o != nil && !IsNil(o.Queries) {
		return true
	}

	return false
}

// SetQueries gets a reference to the given []QueryMultiPostRequestQueriesInner and assigns it to the Queries field.
func (o *QueryMultiPostRequest) SetQueries(v []QueryMultiPostRequestQueriesInner) {
	o.Queries = v
}

func (o QueryMultiPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMultiPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Queries) {
		toSerialize["queries"] = o.Queries
	}
	return toSerialize, nil
}

type NullableQueryMultiPostRequest struct {
	value *QueryMultiPostRequest
	isSet bool
}

func (v NullableQueryMultiPostRequest) Get() *QueryMultiPostRequest {
	return v.value
}

func (v *NullableQueryMultiPostRequest) Set(val *QueryMultiPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMultiPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMultiPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMultiPostRequest(val *QueryMultiPostRequest) *NullableQueryMultiPostRequest {
	return &NullableQueryMultiPostRequest{value: val, isSet: true}
}

func (v NullableQueryMultiPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMultiPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


