/*
BV-BRC API

API documentation for BV-BRC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RpcPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RpcPostRequest{}

// RpcPostRequest struct for RpcPostRequest
type RpcPostRequest struct {
	Method *string `json:"method,omitempty"`
	Params map[string]interface{} `json:"params,omitempty"`
}

// NewRpcPostRequest instantiates a new RpcPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRpcPostRequest() *RpcPostRequest {
	this := RpcPostRequest{}
	return &this
}

// NewRpcPostRequestWithDefaults instantiates a new RpcPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRpcPostRequestWithDefaults() *RpcPostRequest {
	this := RpcPostRequest{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *RpcPostRequest) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RpcPostRequest) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *RpcPostRequest) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *RpcPostRequest) SetMethod(v string) {
	o.Method = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *RpcPostRequest) GetParams() map[string]interface{} {
	if o == nil || IsNil(o.Params) {
		var ret map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RpcPostRequest) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *RpcPostRequest) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *RpcPostRequest) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o RpcPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RpcPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

type NullableRpcPostRequest struct {
	value *RpcPostRequest
	isSet bool
}

func (v NullableRpcPostRequest) Get() *RpcPostRequest {
	return v.value
}

func (v *NullableRpcPostRequest) Set(val *RpcPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRpcPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRpcPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRpcPostRequest(val *RpcPostRequest) *NullableRpcPostRequest {
	return &NullableRpcPostRequest{value: val, isSet: true}
}

func (v NullableRpcPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRpcPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


