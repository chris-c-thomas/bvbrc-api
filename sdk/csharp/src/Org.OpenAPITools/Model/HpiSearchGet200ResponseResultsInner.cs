// <auto-generated>
/*
 * BV-BRC API
 *
 * API documentation for BV-BRC
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// HpiSearchGet200ResponseResultsInner
    /// </summary>
    public partial class HpiSearchGet200ResponseResultsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HpiSearchGet200ResponseResultsInner" /> class.
        /// </summary>
        /// <param name="id">id</param>
        /// <param name="name">name</param>
        [JsonConstructor]
        public HpiSearchGet200ResponseResultsInner(Option<string?> id = default, Option<string?> name = default)
        {
            IdOption = id;
            NameOption = name;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> IdOption { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        /* <example>12345</example> */
        [JsonPropertyName("id")]
        public string? Id { get { return this.IdOption; } set { this.IdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Name
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NameOption { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /* <example>Example HPI Entry</example> */
        [JsonPropertyName("name")]
        public string? Name { get { return this.NameOption; } set { this.NameOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HpiSearchGet200ResponseResultsInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="HpiSearchGet200ResponseResultsInner" />
    /// </summary>
    public class HpiSearchGet200ResponseResultsInnerJsonConverter : JsonConverter<HpiSearchGet200ResponseResultsInner>
    {
        /// <summary>
        /// Deserializes json to <see cref="HpiSearchGet200ResponseResultsInner" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override HpiSearchGet200ResponseResultsInner Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> id = default;
            Option<string?> name = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "name":
                            name = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class HpiSearchGet200ResponseResultsInner.");

            if (name.IsSet && name.Value == null)
                throw new ArgumentNullException(nameof(name), "Property is not nullable for class HpiSearchGet200ResponseResultsInner.");

            return new HpiSearchGet200ResponseResultsInner(id, name);
        }

        /// <summary>
        /// Serializes a <see cref="HpiSearchGet200ResponseResultsInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="hpiSearchGet200ResponseResultsInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, HpiSearchGet200ResponseResultsInner hpiSearchGet200ResponseResultsInner, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, hpiSearchGet200ResponseResultsInner, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="HpiSearchGet200ResponseResultsInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="hpiSearchGet200ResponseResultsInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, HpiSearchGet200ResponseResultsInner hpiSearchGet200ResponseResultsInner, JsonSerializerOptions jsonSerializerOptions)
        {
            if (hpiSearchGet200ResponseResultsInner.IdOption.IsSet && hpiSearchGet200ResponseResultsInner.Id == null)
                throw new ArgumentNullException(nameof(hpiSearchGet200ResponseResultsInner.Id), "Property is required for class HpiSearchGet200ResponseResultsInner.");

            if (hpiSearchGet200ResponseResultsInner.NameOption.IsSet && hpiSearchGet200ResponseResultsInner.Name == null)
                throw new ArgumentNullException(nameof(hpiSearchGet200ResponseResultsInner.Name), "Property is required for class HpiSearchGet200ResponseResultsInner.");

            if (hpiSearchGet200ResponseResultsInner.IdOption.IsSet)
                writer.WriteString("id", hpiSearchGet200ResponseResultsInner.Id);

            if (hpiSearchGet200ResponseResultsInner.NameOption.IsSet)
                writer.WriteString("name", hpiSearchGet200ResponseResultsInner.Name);
        }
    }
}
